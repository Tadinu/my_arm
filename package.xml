<?xml version="1.0"?>
<package>
    <name>my_arm</name>
    <version>0.0.0</version>
    <description>Robot Arm Package</description>

    <!-- One maintainer tag required, multiple allowed, one person per tag -->
    <!-- Example:  -->
    <!-- <maintainer email="jane.doe@example.com">Jane Doe</maintainer> -->
    <maintainer email="ducthan@toki.waseda.jp">Tad</maintainer>

    <!-- One license tag required, multiple allowed, one license per tag -->
    <!-- Commonly used license strings: -->
    <!--   BSD, MIT, Boost Software License, GPLv2, GPLv3, LGPLv2.1, LGPLv3 -->
    <license>BSD</license>

    <!--
    <url type="website">http://gazebosim.org/w/index.php?title=Tutorials/1.9/Using_A_URDF_In_Gazebo</url>
    <url type="bugtracker">https://github.com/osrf/gazebo_ros_demos/issues</url>
    <url type="repository">https://github.com/osrf/gazebo_ros_demos</url>
    -->
    <author email="ducthan@toki.waseda.jp">Tad</author>



    <!-- Url tags are optional, but mutiple are allowed, one per tag -->
    <!-- Optional attribute type can be: website, bugtracker, or repository -->
    <!-- Example: -->
    <!-- <url type="website">http://wiki.ros.org/myArm</url> -->


    <!-- Author tags are optional, mutiple are allowed, one per tag -->
    <!-- Authors do not have to be maintianers, but could be -->
    <!-- Example: -->
    <!-- <author email="jane.doe@example.com">Jane Doe</author> -->


    <!-- The *_depend tags are used to specify dependencies -->
    <!-- Dependencies can be catkin packages or system dependencies -->
    <!-- Examples: -->
    <!-- Use build_depend for packages you need at compile time: -->
    <!--   <build_depend>message_generation</build_depend> -->
    <!-- Use buildtool_depend for build tool packages: -->
    <!--   <buildtool_depend>catkin</buildtool_depend> -->
    <!-- Use run_depend for packages you need at runtime: -->
    <!--   <run_depend>message_runtime</run_depend> -->
    <!-- Use test_depend for packages you need only for testing: -->
    <!--   <test_depend>gtest</test_depend> -->
    <buildtool_depend>catkin</buildtool_depend>

    <build_depend>roslib</build_depend>
    <build_depend>rospack</build_depend>
    <build_depend>roscpp</build_depend>
    <build_depend>rospy</build_depend>
    <build_depend>message_generation</build_depend> <!-- For Message Generation -->
    <build_depend>message_runtime</build_depend>
    <build_depend>geometry_msgs</build_depend>
    <build_depend>sensor_msgs</build_depend>
    <build_depend>shape_msgs</build_depend>
    <build_depend>object_recognition_msgs</build_depend>
    <build_depend>visualization_msgs</build_depend>
    <build_depend>interactive_markers</build_depend>
    <!-- <build_depend>moveit_visual_tools</build_depend> -->
    <build_depend>rviz_visual_tools</build_depend>
    <build_depend>std_msgs</build_depend>
    <build_depend>tf</build_depend>
    <build_depend>urdf</build_depend>
    <build_depend>xacro</build_depend>
    <build_depend>rviz</build_depend>

    <!-- 3rd Build Denpendencies -->
        <build_depend>gazebo_ros</build_depend>
        <build_depend>gazebo_plugins</build_depend>
        <build_depend>gazebo_ros_control</build_depend>
        <build_depend>joint_state_controller</build_depend>
        <build_depend>robot_state_publisher</build_depend>

        <!-- Build: Leap Motion -->
        <build_depend>camera_calibration_parsers</build_depend>
        <build_depend>camera_info_manager</build_depend>
        <build_depend>image_transport</build_depend>

        <!-- Build: Realsense  -->
        <build_depend>librealsense</build_depend>
        <build_depend>realsense_camera</build_depend>
        <build_depend>cv_bridge</build_depend>
        <build_depend>pcl_ros</build_depend>
        <build_depend>dynamic_reconfigure</build_depend>

        <!-- Build: Graspit -->
        <build_depend>graspit</build_depend>
        <!-- <build_depend>graspit_ros_planning_msgs</build_depend> -->

    <!-- ################################################### -->
    <!-- -->
    <run_depend>roslib</run_depend>
    <run_depend>rospack</run_depend>
    <run_depend>roscpp</run_depend>
    <run_depend>rospy</run_depend>
    <run_depend>message_runtime</run_depend>  <!-- For Message Running -->
    <run_depend>geometry_msgs</run_depend>
    <run_depend>sensor_msgs</run_depend>
    <run_depend>shape_msgs</run_depend>
    <run_depend>object_recognition_msgs</run_depend>
    <run_depend>visualization_msgs</run_depend>
    <run_depend>interactive_markers</run_depend>
    <!-- <run_depend>moveit_visual_tools</run_depend> -->
    <run_depend>rviz_visual_tools</run_depend>
    <run_depend>std_msgs</run_depend>
    <run_depend>tf</run_depend>
    <run_depend>urdf</run_depend>
    <run_depend>xacro</run_depend>
    <run_depend>rviz</run_depend>

    <!-- 3rd Run Denpendencies -->
        <run_depend>gazebo_ros</run_depend>
        <run_depend>gazebo_plugins</run_depend>
        <run_depend>gazebo_ros_control</run_depend>

        <run_depend>joint_state_controller</run_depend>
        <run_depend>robot_state_publisher</run_depend>
        <run_depend>position_controllers</run_depend>
        <run_depend>joint_trajectory_controller</run_depend>

        <!-- Run: Leap Motion -->
        <run_depend>camera_calibration_parsers</run_depend>
        <run_depend>camera_info_manager</run_depend>
        <run_depend>image_transport</run_depend>

        <!-- Build: Realsense  -->
        <run_depend>librealsense</run_depend>
        <run_depend>realsense_camera</run_depend>
        <run_depend>cv_bridge</run_depend>
        <run_depend>pcl_ros</run_depend>
        <run_depend>dynamic_reconfigure</run_depend>

        <!-- Run: Graspit -->
        <run_depend>graspit</run_depend>
        <!-- <run_depend>graspit_ros_planning_msgs</run_depend> -->

    <test_depend>rostest</test_depend>
    <!-- The export tag contains other, unspecified, tags -->
    <export>
        <!--<rviz plugin="${prefix}/plugin_description.xml"/> -->
        <!-- Other tools can request additional information be placed here -->
        <gazebo_ros plugin_path="${prefix}/lib" gazebo_media_path="${prefix}" />
    </export>
</package>
